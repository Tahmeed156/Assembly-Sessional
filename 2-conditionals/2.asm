.MODEL SMALL

.STACK 100H

.DATA
    CR EQU 0DH
    LF EQU 0AH             
    TRUE EQU 0
    FALSE EQU 255
    
    INP1 DB 'ENTER PASSWORD = $'
    OUT1 DB CR, LF, 'VALID PASSWORD$'
    OUT2 DB CR, LF, 'INVALID PASSWORD$'
    
    CONTAIN_UPPER DB FALSE
    CONTAIN_LOWER DB FALSE                       
    CONTAIN_DIGIT DB FALSE
    
.CODE

MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    
;INPUT 
    LEA DX, INP1
    MOV AH, 9
    INT 21H
                
INP_CHAR:
    MOV AH, 1
    INT 21H
    
    ;CHECKING IF CHARACTER IS NOT IN RANGE     
    CMP AL, 21H
    JL PROCESS
    CMP AL, 7EH
    JG PROCESS
    
    ;VALIDATING CHARACTERS
    CMP AL, 30H
    JL INP_CHAR
    CMP AL, 39H
    JLE HAS_DIGIT
    
    CMP AL, 41H
    JL INP_CHAR
    CMP AL, 5AH
    JLE HAS_UPPER
    
    CMP AL, 61H
    JL INP_CHAR
    CMP AL, 7AH
    JLE HAS_LOWER
         
    JMP INP_CHAR    
    
    ;SETTING FLAGS
HAS_DIGIT:    
    MOV CONTAIN_DIGIT, TRUE
    JMP INP_CHAR
HAS_UPPER:    
    MOV CONTAIN_UPPER, TRUE
    JMP INP_CHAR
HAS_LOWER:    
    MOV CONTAIN_LOWER, TRUE

    JMP INP_CHAR

;CHOOSING THE NUMBER

PROCESS:
    CMP CONTAIN_DIGIT, TRUE
    JNE PRINT_INVALID
    CMP CONTAIN_LOWER, TRUE
    JNE PRINT_INVALID
    CMP CONTAIN_UPPER, TRUE
    JNE PRINT_INVALID
    
    JMP PRINT_VALID
    
;PRINTING THE RESULT    
             
PRINT_VALID:
    LEA DX, OUT1
    MOV AH, 9
    INT 21H
    JMP EXIT
    
PRINT_INVALID:      
    LEA DX, OUT2
    MOV AH, 9
    INT 21H
    JMP EXIT 
    
EXIT:
    MOV AH, 4CH
    INT 21H
  
MAIN ENDP

    END MAIN
